/* soapStub.h
   Generated by gSOAP 2.8.22 from demo.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#pragma once
#include "stdsoap2.h"
#if GSOAP_VERSION != 20822
# error "GSOAP VERSION 20822 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_demo__Result
#define SOAP_TYPE_demo__Result (7)
/* demo:Result */
struct demo__Result
{
public:
	float a;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:float */
	float b;	/* required element of type xsd:float */
	float res;	/* required element of type xsd:float */
public:
	int soap_type() const { return 7; } /* = unique type id SOAP_TYPE_demo__Result */
};
#endif

#ifndef SOAP_TYPE_demo__AddBResponse
#define SOAP_TYPE_demo__AddBResponse (9)
/* demo:AddBResponse */
struct demo__AddBResponse
{
public:
	int soap_type() const { return 9; } /* = unique type id SOAP_TYPE_demo__AddBResponse */
};
#endif

#ifndef SOAP_TYPE_demo__AddAResponse
#define SOAP_TYPE_demo__AddAResponse (13)
/* demo:AddAResponse */
struct demo__AddAResponse
{
public:
	double res;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:double */
public:
	int soap_type() const { return 13; } /* = unique type id SOAP_TYPE_demo__AddAResponse */
};
#endif

#ifndef SOAP_TYPE_demo__AddA
#define SOAP_TYPE_demo__AddA (14)
/* demo:AddA */
struct demo__AddA
{
public:
	double a;	/* required element of type xsd:double */
	double b;	/* required element of type xsd:double */
public:
	int soap_type() const { return 14; } /* = unique type id SOAP_TYPE_demo__AddA */
};
#endif

#ifndef SOAP_TYPE_demo__AddB
#define SOAP_TYPE_demo__AddB (17)
/* demo:AddB */
struct demo__AddB
{
public:
	double a;	/* required element of type xsd:double */
	double b;	/* required element of type xsd:double */
public:
	int soap_type() const { return 17; } /* = unique type id SOAP_TYPE_demo__AddB */
};
#endif

#ifndef SOAP_TYPE_demo__AddC
#define SOAP_TYPE_demo__AddC (22)
/* demo:AddC */
struct demo__AddC
{
public:
	void *_;	/* transient */
public:
	int soap_type() const { return 22; } /* = unique type id SOAP_TYPE_demo__AddC */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (23)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 23; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (24)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 24; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (26)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 26; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (27)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 27; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (28)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 28; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 demo__AddA(struct soap*, double a, double b, double &res);

SOAP_FMAC5 int SOAP_FMAC6 demo__AddB(struct soap*, double a, double b, struct demo__AddBResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 demo__AddC(struct soap*, void *_, struct demo__Result *res);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_demo__AddA(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_demo__AddB(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_demo__AddC(struct soap*);

#endif

/* End of soapStub.h */
